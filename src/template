// {{comment}}
import React from 'react';

const iconList = [
  {%- for icon in icons %}
  '{{icon.name}}',
  {%- endfor %}
]

export interface IconProps {
    color?: string
    className?: string
    height?: number
    kind?: string | any
    onClick?: () => void
    preview?: boolean
    size?: number
    style?: any
    width?: number
    wrapperStyle?: any
}

const Icon: React.FC<IconProps> = (props: IconProps) => {

    const renderPreview = () => (
      <div>
        {iconList.map(kind => renderPreviewKind(kind))}
      </div>
    )

    const renderIcon = kind => {
      const {wrapperStyle} = props;
      if (wrapperStyle) {
        return <div style={wrapperStyle}>{getIcon(kind)}</div>
      }
      return getIcon(kind)
    }

    const renderPreviewKind = kind => {
      return (
        <div key={kind}>
          <h3>&lt;Icon kind="{kind}" /&gt;</h3>
          {renderIcon(kind)}
        </div>
      )
    }

    const getIcon = kind => {
      const {height, {{ 'color, ' if useColorProp }}onClick, size, style, width, color, className, ...rest} = props;

      const iconMap = {
        {% for icon in icons -%}
        '{{icon.name}}': {{icon.svg | safe}},
        {% endfor -%}
      };
      return iconMap(kind);
    }

    const { kind, preview } = props;
    const icon = preview ? renderPreview() : renderIcon(kind);
    return <>{icon}</>;
}

Icon.defaultProps = {
  {%- if useColorProp %}
    color: '#000',
    {%- endif %}
    size: 16
};

export default Icon;